{"ast":null,"code":"import _objectWithoutProperties from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/Chart.js\";\n\n/**\n *  Copyright (c) 2016, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/* eslint max-len:0 */\nimport React from \"react/\";\nimport createReactClass from \"create-react-class\"; // Pond\n\nimport { TimeSeries, TimeRangeEvent, TimeRange } from \"pondjs\"; // Imports from the charts library\n\nimport { ChartContainer, ChartRow, Charts, EventChart, Resizable } from \"react-timeseries-charts\"; //\n// Test data\n//\n\nvar outageEvents = [{\n  startTime: \"2015-03-08T09:00:00Z\",\n  endTime: \"2015-03-22T14:00:00Z\",\n  title: \"ANL Scheduled Maintenance\",\n  description: \"ANL will be switching border routers...\",\n  completed: true,\n  external_ticket: \"\",\n  esnet_ticket: \"ESNET-20150302-002\",\n  organization: \"ANL\",\n  type: \"Planned\"\n}, {\n  startTime: \"2015-04-01T03:30:00Z\",\n  endTime: \"2015-04-02T16:50:00Z\",\n  title: \"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\n  description: \"The listed circuit was unavailable due to bent pins.\",\n  completed: true,\n  external_ticket: \"3576:144\",\n  esnet_ticket: \"ESNET-20150421-013\",\n  organization: \"Internet2 / Level 3\",\n  type: \"Unplanned\"\n}, {\n  startTime: \"2015-04-22T03:30:00Z\",\n  endTime: \"2015-04-22T13:00:00Z\",\n  description: \"At 13:33 pacific circuit 06519 went down.\",\n  title: \"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\n  completed: true,\n  external_ticket: \"\",\n  esnet_ticket: \"ESNET-20150421-013\",\n  organization: \"Internet2 / Level 3\",\n  type: \"Unplanned\"\n}]; //\n// Turn data into TimeSeries\n//\n\nvar events = outageEvents.map(function (_ref) {\n  var startTime = _ref.startTime,\n      endTime = _ref.endTime,\n      data = _objectWithoutProperties(_ref, [\"startTime\", \"endTime\"]);\n\n  return new TimeRangeEvent(new TimeRange(new Date(startTime), new Date(endTime)), data);\n});\nvar series = new TimeSeries({\n  name: \"outages\",\n  events: events\n}); //\n// Render event chart\n//\n\nfunction outageEventStyleFunc(event, state) {\n  var color = event.get(\"type\") === \"Planned\" ? \"#998ec3\" : \"#f1a340\";\n\n  switch (state) {\n    case \"normal\":\n      return {\n        fill: color\n      };\n\n    case \"hover\":\n      return {\n        fill: color,\n        opacity: 0.4\n      };\n\n    case \"selected\":\n      return {\n        fill: color\n      };\n\n    default: //pass\n\n  }\n}\n\nvar outages = createReactClass({\n  displayName: \"outages\",\n  getInitialState: function getInitialState() {\n    return {\n      tracker: null,\n      timerange: series.timerange()\n    };\n  },\n  handleTrackerChanged: function handleTrackerChanged(tracker) {\n    this.setState({\n      tracker: tracker\n    });\n  },\n  handleTimeRangeChange: function handleTimeRangeChange(timerange) {\n    this.setState({\n      timerange: timerange\n    });\n  },\n  render: function render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(Resizable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(ChartContainer, {\n      timeRange: this.state.timerange,\n      enablePanZoom: true,\n      onTimeRangeChanged: this.handleTimeRangeChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(ChartRow, {\n      height: \"30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Charts, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(EventChart, {\n      series: series,\n      size: 45,\n      style: outageEventStyleFunc,\n      label: function label(e) {\n        return e.get(\"title\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))))))));\n  }\n}); // Export example\n\nexport default {\n  outages: outages\n};","map":{"version":3,"sources":["/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/Chart.js"],"names":["React","createReactClass","TimeSeries","TimeRangeEvent","TimeRange","ChartContainer","ChartRow","Charts","EventChart","Resizable","outageEvents","startTime","endTime","title","description","completed","external_ticket","esnet_ticket","organization","type","events","map","data","Date","series","name","outageEventStyleFunc","event","state","color","get","fill","opacity","outages","getInitialState","tracker","timerange","handleTrackerChanged","setState","handleTimeRangeChange","render","e"],"mappings":"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","sourcesContent":["/**\n *  Copyright (c) 2016, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/* eslint max-len:0 */\n\nimport React from \"react/\";\nimport createReactClass from \"create-react-class\";\n\n// Pond\nimport { TimeSeries, TimeRangeEvent, TimeRange } from \"pondjs\";\n\n// Imports from the charts library\nimport {ChartContainer, ChartRow, Charts, EventChart, Resizable} from \"react-timeseries-charts\";\n\n\n//\n// Test data\n//\n\nconst outageEvents = [\n    {\n        startTime: \"2015-03-08T09:00:00Z\",\n        endTime: \"2015-03-22T14:00:00Z\",\n        title: \"ANL Scheduled Maintenance\",\n        description: \"ANL will be switching border routers...\",\n        completed: true,\n        external_ticket: \"\",\n        esnet_ticket: \"ESNET-20150302-002\",\n        organization: \"ANL\",\n        type: \"Planned\"\n    },\n    {\n        startTime: \"2015-04-01T03:30:00Z\",\n        endTime: \"2015-04-02T16:50:00Z\",\n        title: \"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\n        description: \"The listed circuit was unavailable due to bent pins.\",\n        completed: true,\n        external_ticket: \"3576:144\",\n        esnet_ticket: \"ESNET-20150421-013\",\n        organization: \"Internet2 / Level 3\",\n        type: \"Unplanned\"\n    },\n    {\n        startTime: \"2015-04-22T03:30:00Z\",\n        endTime: \"2015-04-22T13:00:00Z\",\n        description: \"At 13:33 pacific circuit 06519 went down.\",\n        title: \"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\n        completed: true,\n        external_ticket: \"\",\n        esnet_ticket: \"ESNET-20150421-013\",\n        organization: \"Internet2 / Level 3\",\n        type: \"Unplanned\"\n    }\n];\n\n//\n// Turn data into TimeSeries\n//\n\nconst events = outageEvents.map(\n    ({ startTime, endTime, ...data }) =>\n        new TimeRangeEvent(new TimeRange(new Date(startTime), new Date(endTime)), data)\n);\nconst series = new TimeSeries({ name: \"outages\", events });\n\n//\n// Render event chart\n//\n\nfunction outageEventStyleFunc(event, state) {\n    const color = event.get(\"type\") === \"Planned\" ? \"#998ec3\" : \"#f1a340\";\n    switch (state) {\n        case \"normal\":\n            return {\n                fill: color\n            };\n        case \"hover\":\n            return {\n                fill: color,\n                opacity: 0.4\n            };\n        case \"selected\":\n            return {\n                fill: color\n            };\n        default:\n        //pass\n    }\n}\n\nconst outages = createReactClass({\n    getInitialState() {\n        return {\n            tracker: null,\n            timerange: series.timerange()\n        };\n    },\n    handleTrackerChanged(tracker) {\n        this.setState({ tracker });\n    },\n    handleTimeRangeChange(timerange) {\n        this.setState({ timerange });\n    },\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <Resizable>\n                            <ChartContainer\n                                timeRange={this.state.timerange}\n                                enablePanZoom={true}\n                                onTimeRangeChanged={this.handleTimeRangeChange}\n                            >\n                                <ChartRow height=\"30\">\n                                    <Charts>\n                                        <EventChart\n                                            series={series}\n                                            size={45}\n                                            style={outageEventStyleFunc}\n                                            label={e => e.get(\"title\")}\n                                        />\n                                    </Charts>\n                                </ChartRow>\n                            </ChartContainer>\n                        </Resizable>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n});\n\n// Export example\nexport default { outages};"]},"metadata":{},"sourceType":"module"}