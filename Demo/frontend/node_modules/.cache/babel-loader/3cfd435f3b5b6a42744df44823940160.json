{"ast":null,"code":"import _classCallCheck from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/UpdatePredicted.js\";\nimport React, { Component } from \"react\";\nimport { Button, Table, Container } from \"reactstrap\"; // import { socket } from \"../global/header\";\n\nvar UpdatePredicted =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdatePredicted, _Component);\n\n  function UpdatePredicted() {\n    var _this;\n\n    _classCallCheck(this, UpdatePredicted);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdatePredicted).call(this));\n\n    _this.getData = function (foodItems) {\n      _this.setState({\n        food_data: foodItems\n      });\n    };\n\n    _this.sendPredQty = function (id) {\n      var predicted_details;\n\n      _this.state.food_data.map(function (food) {\n        if (food._id == id) {\n          predicted_details = food;\n        }\n\n        return food;\n      });\n\n      console.log(predicted_details); //socket.emit(\"ChangePred\", predicted_details);\n    };\n\n    _this.changePredQuantity = function (event, foodid) {\n      if (parseInt(event.target.value) < 0) {\n        event.target.value = 0;\n      }\n\n      var new_array = _this.state.food_data.map(function (food) {\n        if (food._id == foodid) {\n          food.predQty = parseInt(event.target.value);\n        }\n\n        return food;\n      });\n\n      _this.setState({\n        food_data: new_array\n      });\n    };\n\n    _this.state = {\n      food_data: [] // this is where we are connecting to with sockets,\n\n    };\n    return _this;\n  }\n\n  _createClass(UpdatePredicted, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var state_current = this; //socket.emit(\"initial_data\");\n      //socket.on(\"get_data\", this.getData);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {//socket.off(\"get_data\", this.getData);\n    }\n  }, {\n    key: \"getFoodData\",\n    value: function getFoodData() {\n      var _this2 = this;\n\n      return this.state.food_data.map(function (food) {\n        return React.createElement(\"tr\", {\n          key: food._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \" \", food.name, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onChange: function onChange(e) {\n            return _this2.changePredQuantity(e, food._id);\n          },\n          value: food.predQty,\n          type: \"number\",\n          placeholder: \"Quantity\",\n          min: \"0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.sendPredQty(food._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Update Qty\")));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"h2Class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Update Predicted\"), React.createElement(Table, {\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Product\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Predicted Qty\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Update\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, this.getFoodData())));\n    }\n  }]);\n\n  return UpdatePredicted;\n}(Component);\n\nexport default UpdatePredicted;","map":{"version":3,"sources":["/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/UpdatePredicted.js"],"names":["React","Component","Button","Table","Container","UpdatePredicted","getData","foodItems","setState","food_data","sendPredQty","id","predicted_details","state","map","food","_id","console","log","changePredQuantity","event","foodid","parseInt","target","value","new_array","predQty","state_current","name","e","getFoodData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Table, Container } from \"reactstrap\";\n// import { socket } from \"../global/header\";\nclass UpdatePredicted extends Component {\n  constructor() {\n    super();\n    this.state = {\n      food_data: []\n      // this is where we are connecting to with sockets,\n    };\n  }\n\n  getData = foodItems => {\n    this.setState({ food_data: foodItems });\n  };\n\n  componentDidMount() {\n    var state_current = this;\n    //socket.emit(\"initial_data\");\n    //socket.on(\"get_data\", this.getData);\n  }\n\n  sendPredQty = id => {\n    var predicted_details;\n    this.state.food_data.map(food => {\n      if (food._id == id) {\n        predicted_details = food;\n      }\n      return food;\n    });\n    console.log(predicted_details);\n    //socket.emit(\"ChangePred\", predicted_details);\n  };\n\n  changePredQuantity = (event, foodid) => {\n    if (parseInt(event.target.value) < 0) {\n      event.target.value = 0;\n    }\n    var new_array = this.state.food_data.map(food => {\n      if (food._id == foodid) {\n        food.predQty = parseInt(event.target.value);\n      }\n      return food;\n    });\n    this.setState({ food_data: new_array });\n  };\n\n  componentWillUnmount() {\n    //socket.off(\"get_data\", this.getData);\n  }\n\n  getFoodData() {\n    return this.state.food_data.map(food => {\n      return (\n        <tr key={food._id}>\n          <td> {food.name} </td>\n          <td>\n            <input\n              onChange={e => this.changePredQuantity(e, food._id)}\n              value={food.predQty}\n              type=\"number\"\n              placeholder=\"Quantity\"\n              min=\"0\"\n            />\n          </td>\n          <td>\n            <button onClick={() => this.sendPredQty(food._id)}>\n              Update Qty\n            </button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <h2 className=\"h2Class\">Update Predicted</h2>\n        <Table striped>\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Predicted Qty</th>\n              <th>Update</th>\n            </tr>\n          </thead>\n          <tbody>{this.getFoodData()}</tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\n\nexport default UpdatePredicted;\n"]},"metadata":{},"sourceType":"module"}