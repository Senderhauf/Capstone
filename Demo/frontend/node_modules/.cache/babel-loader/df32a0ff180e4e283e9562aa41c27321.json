{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _pondjs = require(\"pondjs\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n *  Copyright (c) 2015-present, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Renders a band with extents defined by the supplied TimeRange. This\n * is a super simple component right now which just renders a simple\n * rectangle, in the style of the prop `style` across the timerange\n * specified. However, this is useful for highlighting a timerange to\n * correspond with another part of the your UI.\n *\n * See also the Brush component for a TimeRange marker that you can\n * resize interactively.\n */\n\n\nvar TimeRangeMarker = function (_React$Component) {\n  _inherits(TimeRangeMarker, _React$Component);\n\n  function TimeRangeMarker() {\n    _classCallCheck(this, TimeRangeMarker);\n\n    return _possibleConstructorReturn(this, (TimeRangeMarker.__proto__ || Object.getPrototypeOf(TimeRangeMarker)).apply(this, arguments));\n  }\n\n  _createClass(TimeRangeMarker, [{\n    key: \"renderBand\",\n    value: function renderBand() {\n      var timerange = this.props.timerange;\n      var timeScale = this.props.timeScale; // Viewport bounds\n\n      var viewBeginTime = timeScale.invert(0);\n      var viewEndTime = timeScale.invert(this.props.width);\n      var viewport = new _pondjs.TimeRange(viewBeginTime, viewEndTime);\n      var bandStyle = void 0;\n\n      if (this.props.style) {\n        bandStyle = this.props.style;\n      } else {\n        bandStyle = {\n          fill: \"steelblue\"\n        };\n      }\n\n      if (!viewport.disjoint(timerange)) {\n        var range = timerange.intersection(viewport);\n        var begin = range.begin();\n        var end = range.end();\n        var beginPos = timeScale(begin);\n        var endPos = timeScale(end);\n        var width = endPos - beginPos;\n\n        if (width < 1) {\n          width = 1;\n        }\n\n        return _react2.default.createElement(\"rect\", {\n          x: beginPos,\n          y: 0,\n          width: width,\n          height: this.props.height,\n          style: bandStyle\n        });\n      }\n\n      return _react2.default.createElement(\"g\", null);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\"g\", null, this.renderBand());\n    }\n  }]);\n\n  return TimeRangeMarker;\n}(_react2.default.Component);\n\nexports.default = TimeRangeMarker;\nTimeRangeMarker.propTypes = {\n  /**\n   * Show or hide this marker\n   */\n  visible: _propTypes2.default.bool,\n\n  /**\n   * The timerange to mark. This is in the form of a\n   * [Pond TimeRange](https://esnet-pondjs.appspot.com/#/timerange)\n   */\n  timerange: _propTypes2.default.instanceOf(_pondjs.TimeRange).isRequired,\n\n  /**\n   * The style of the rect that will be rendered as a SVG <Rect>. This\n   * object is the inline CSS for that rect.\n   */\n  style: _propTypes2.default.object,\n  // eslint-disable-line\n\n  /**\n   * [Internal] The timeScale supplied by the surrounding ChartContainer\n   */\n  timeScale: _propTypes2.default.func.isRequired,\n\n  /**\n   * [Internal] The width supplied by the surrounding ChartContainer\n   */\n  width: _propTypes2.default.number.isRequired,\n\n  /**\n   * [Internal] The height supplied by the surrounding ChartContainer\n   */\n  height: _propTypes2.default.number.isRequired\n};\nTimeRangeMarker.defaultProps = {\n  visible: true,\n  spacing: 1,\n  offset: 0,\n  style: {\n    fill: \"rgba(70, 130, 180, 0.25);\"\n  }\n};","map":null,"metadata":{},"sourceType":"script"}