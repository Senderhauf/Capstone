{"ast":null,"code":"import _classCallCheck from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/PlaceOrder.js\";\nimport React, { Component } from \"react\";\nimport { Button, Table, Container } from \"reactstrap\"; // import { socket } from \"../global/header\";\n\nvar PlaceOrder =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlaceOrder, _Component);\n\n  function PlaceOrder() {\n    var _this;\n\n    _classCallCheck(this, PlaceOrder);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PlaceOrder).call(this));\n\n    _this.getData = function (foodItems) {\n      console.log(foodItems);\n      foodItems = foodItems.map(function (food) {\n        food.order = 0;\n        return food;\n      });\n\n      _this.setState({\n        food_data: foodItems\n      });\n    };\n\n    _this.sendOrder = function (id) {\n      var order_details;\n\n      _this.state.food_data.map(function (food) {\n        if (food._id == id) {\n          order_details = food;\n        }\n\n        return food;\n      });\n\n      console.log(order_details); // socket.emit(\"putOrder\", order_details);\n\n      var new_array = _this.state.food_data.map(function (food) {\n        food.order = 0;\n        return food;\n      });\n\n      _this.setState({\n        food_data: new_array\n      });\n    };\n\n    _this.changeQuantity = function (event, foodid) {\n      if (parseInt(event.target.value) < 0) {\n        event.target.value = 0;\n      }\n\n      var new_array = _this.state.food_data.map(function (food) {\n        if (food._id == foodid) {\n          food.order = parseInt(event.target.value);\n        }\n\n        return food;\n      });\n\n      _this.setState({\n        food_data: new_array\n      });\n    };\n\n    _this.state = {\n      food_data: [] // this is where we are connecting to with sockets,\n\n    };\n    return _this;\n  }\n\n  _createClass(PlaceOrder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // socket.emit(\"initial_data\");\n      var state_current = this; // socket.on(\"get_data\", state_current.getData);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {} // socket.off(\"get_data\", this.getData);\n    //Function to place the order.\n\n  }, {\n    key: \"getFoodData\",\n    // To get the initial data\n    value: function getFoodData() {\n      var _this2 = this;\n\n      return this.state.food_data.map(function (food) {\n        return React.createElement(\"tr\", {\n          key: food._id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \" \", food.name, \" \"), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          onChange: function onChange(e) {\n            return _this2.changeQuantity(e, food._id);\n          },\n          value: food.order,\n          type: \"number\",\n          placeholder: \"Quantity\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.sendOrder(food._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, \"Order\")));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"h2Class\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Order Menu\"), React.createElement(Table, {\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Product\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Quantity\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Order\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.getFoodData())));\n    }\n  }]);\n\n  return PlaceOrder;\n}(Component);\n\nexport default PlaceOrder;","map":{"version":3,"sources":["/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/PlaceOrder.js"],"names":["React","Component","Button","Table","Container","PlaceOrder","getData","foodItems","console","log","map","food","order","setState","food_data","sendOrder","id","order_details","state","_id","new_array","changeQuantity","event","foodid","parseInt","target","value","state_current","name","e","getFoodData"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Table, Container } from \"reactstrap\";\n// import { socket } from \"../global/header\";\nclass PlaceOrder extends Component {\n  constructor() {\n    super();\n    this.state = {\n      food_data: []\n      // this is where we are connecting to with sockets,\n    };\n  }\n  getData = foodItems => {\n    console.log(foodItems);\n    foodItems = foodItems.map(food => {\n      food.order = 0;\n      return food;\n    });\n    this.setState({ food_data: foodItems });\n  };\n  componentDidMount() {\n    // socket.emit(\"initial_data\");\n    var state_current = this;\n    // socket.on(\"get_data\", state_current.getData);\n  }\n  componentWillUnmount() {\n    // socket.off(\"get_data\", this.getData);\n  }\n  //Function to place the order.\n  sendOrder = id => {\n    var order_details;\n    this.state.food_data.map(food => {\n      if (food._id == id) {\n        order_details = food;\n      }\n      return food;\n    });\n    console.log(order_details);\n    // socket.emit(\"putOrder\", order_details);\n    var new_array = this.state.food_data.map(food => {\n      food.order = 0;\n      return food;\n    });\n    this.setState({ food_data: new_array });\n  };\n  // Changing the quantity in the state which is emitted to the backend at the time of placing the order.\n  changeQuantity = (event, foodid) => {\n    if (parseInt(event.target.value) < 0) {\n      event.target.value = 0;\n    }\n    var new_array = this.state.food_data.map(food => {\n      if (food._id == foodid) {\n        food.order = parseInt(event.target.value);\n      }\n      return food;\n    });\n    this.setState({ food_data: new_array });\n  };\n  // To get the initial data\n  getFoodData() {\n    return this.state.food_data.map(food => {\n      return (\n        <tr key={food._id}>\n          <td> {food.name} </td>\n          <td>\n            <input\n              onChange={e => this.changeQuantity(e, food._id)}\n              value={food.order}\n              type=\"number\"\n              placeholder=\"Quantity\"\n            />\n          </td>\n          <td>\n            <button onClick={() => this.sendOrder(food._id)}>Order</button>\n          </td>\n        </tr>\n      );\n    });\n  }\n  render() {\n    return (\n      <Container>\n        <h2 className=\"h2Class\">Order Menu</h2>\n        <Table striped>\n          <thead>\n            <tr>\n              <th>Product</th>\n              <th>Quantity</th>\n              <th>Order</th>\n            </tr>\n          </thead>\n          <tbody>{this.getFoodData()}</tbody>\n        </Table>\n      </Container>\n    );\n  }\n}\nexport default PlaceOrder;\n"]},"metadata":{},"sourceType":"module"}