{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _merge = require(\"merge\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _underscore = require(\"underscore\");\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n *  Copyright (c) 2015-present, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nvar defaultStyle = {\n  label: {\n    fill: \"#8B7E7E\",\n    // Default label color\n    fontWeight: 100,\n    fontSize: 11,\n    pointerEvents: \"none\"\n  },\n  line: {\n    stroke: \"#626262\",\n    strokeWidth: 1,\n    strokeDasharray: \"5,3\",\n    pointerEvents: \"none\"\n  }\n};\n/**\n *\n * The BaseLine component displays a simple horizontal line at a value.\n *\n * For example the following code overlays Baselines for the mean and stdev\n * of a series on top of another chart.\n *\n * ```\n * <ChartContainer timeRange={series.timerange()} >\n *     <ChartRow height=\"150\">\n *         <YAxis\n *           id=\"price\"\n *           label=\"Price ($)\"\n *           min={series.min()} max={series.max()}\n *           width=\"60\" format=\"$,.2f\"\n *         />\n *         <Charts>\n *             <LineChart axis=\"price\" series={series} style={style} />\n *             <Baseline axis=\"price\" value={series.avg()} label=\"Avg\" position=\"right\" />\n *             <Baseline axis=\"price\" value={series.avg()-series.stdev()} />\n *             <Baseline axis=\"price\" value={series.avg()+series.stdev()} />\n *         </Charts>\n *     </ChartRow>\n * </ChartContainer>\n * ```\n */\n\nvar Baseline = function (_React$Component) {\n  _inherits(Baseline, _React$Component);\n\n  function Baseline() {\n    _classCallCheck(this, Baseline);\n\n    return _possibleConstructorReturn(this, (Baseline.__proto__ || Object.getPrototypeOf(Baseline)).apply(this, arguments));\n  }\n\n  _createClass(Baseline, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          vposition = _props.vposition,\n          yScale = _props.yScale,\n          value = _props.value,\n          position = _props.position,\n          style = _props.style,\n          width = _props.width;\n\n      if (!yScale || _underscore2.default.isUndefined(value)) {\n        return null;\n      }\n\n      var y = yScale(value);\n      var transform = \"translate(0 \" + y + \")\";\n      var textAnchor = void 0;\n      var textPositionX = void 0;\n      var pts = [];\n      var labelBelow = vposition === \"auto\" && y < 15 || vposition === \"below\";\n      var textPositionY = labelBelow ? 2 : -2;\n      var alignmentBaseline = labelBelow ? \"hanging\" : \"auto\";\n\n      if (position === \"left\") {\n        textAnchor = \"start\";\n        textPositionX = 5;\n      }\n\n      if (position === \"right\") {\n        textAnchor = \"end\";\n        textPositionX = width - 5;\n      }\n\n      pts.push(\"0 0\");\n      pts.push(width + \" 0\");\n      var points = pts.join(\" \"); //\n      // Style\n      //\n\n      var baseLabelStyle = _extends({}, defaultStyle.label, {\n        alignmentBaseline: alignmentBaseline\n      });\n\n      var labelStyle = (0, _merge2.default)(true, baseLabelStyle, style.label ? style.label : {});\n      var lineStyle = (0, _merge2.default)(true, defaultStyle.line, style.line ? style.line : {});\n      return _react2.default.createElement(\"g\", {\n        className: \"baseline\",\n        transform: transform\n      }, _react2.default.createElement(\"polyline\", {\n        points: points,\n        style: lineStyle\n      }), _react2.default.createElement(\"text\", {\n        style: labelStyle,\n        x: textPositionX,\n        y: textPositionY,\n        textAnchor: textAnchor\n      }, this.props.label));\n    }\n  }]);\n\n  return Baseline;\n}(_react2.default.Component);\n\nexports.default = Baseline;\nBaseline.defaultProps = {\n  visible: true,\n  value: 0,\n  label: \"\",\n  position: \"left\",\n  vposition: \"auto\",\n  style: defaultStyle\n};\nBaseline.propTypes = {\n  /**\n   * Show or hide this chart\n   */\n  visible: _propTypes2.default.bool,\n\n  /**\n   * Reference to the axis which provides the vertical scale for drawing. e.g.\n   * specifying axis=\"trafficRate\" would refer the y-scale to the YAxis of id=\"trafficRate\".\n   */\n  axis: _propTypes2.default.string.isRequired,\n  // eslint-disable-line\n\n  /**\n   * An object describing the style of the baseline of the form\n   * { label, line }. \"label\" and \"line\" are both objects containing\n   * the inline CSS for that part of the baseline.\n   */\n  style: _propTypes2.default.shape({\n    label: _propTypes2.default.object,\n    // eslint-disable-line\n    line: _propTypes2.default.object // eslint-disable-line\n\n  }),\n\n  /**\n   * The y-value to display the line at.\n   */\n  value: _propTypes2.default.number,\n\n  /**\n   * The label to display with the axis.\n   */\n  label: _propTypes2.default.string,\n\n  /**\n   * Whether to display the label on the \"left\" or \"right\".\n   */\n  position: _propTypes2.default.oneOf([\"left\", \"right\"]),\n\n  /**\n   * Whether to display the label above or below the line. The default is \"auto\",\n   * which will show it above the line unless the position is near to the top\n   * of the chart.\n   */\n  vposition: _propTypes2.default.oneOf([\"above\", \"below\", \"auto\"]),\n\n  /**\n   * [Internal] The yScale supplied by the associated YAxis\n   */\n  yScale: _propTypes2.default.func,\n\n  /**\n   * [Internal] The width supplied by the surrounding ChartContainer\n   */\n  width: _propTypes2.default.number\n};","map":null,"metadata":{},"sourceType":"script"}