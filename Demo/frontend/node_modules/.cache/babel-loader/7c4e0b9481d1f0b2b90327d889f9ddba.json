{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _underscore = require(\"underscore\");\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _merge = require(\"merge\");\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _moment = require(\"moment\");\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require(\"react-dom\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _d3Axis = require(\"d3-axis\");\n\nvar _d3Selection = require(\"d3-selection\");\n\nrequire(\"d3-selection-multi\");\n\nvar _d3Time = require(\"d3-time\");\n\nvar _d3TimeFormat = require(\"d3-time-format\");\n\nrequire(\"moment-duration-format\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n *  Copyright (c) 2015-present, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n// eslint-disable-line\n\n\nfunction scaleAsString(scale) {\n  return scale.domain().toString() + \"-\" + scale.range().toString();\n}\n\nvar defaultStyle = {\n  values: {\n    stroke: \"none\",\n    fill: \"#8B7E7E\",\n    // Default value color\n    fontWeight: 100,\n    fontSize: 11,\n    font: '\"Goudy Bookletter 1911\", sans-serif\"'\n  },\n  ticks: {\n    fill: \"none\",\n    stroke: \"#C0C0C0\"\n  },\n  axis: {\n    fill: \"none\",\n    stroke: \"#C0C0C0\"\n  }\n};\n/**\n * Renders a horizontal time axis. This is used internally by the ChartContainer\n * as a result of you specifying the timerange for the chart. Please see the API\n * docs for ChartContainer for more information.\n */\n\nvar TimeAxis = function (_React$Component) {\n  _inherits(TimeAxis, _React$Component);\n\n  function TimeAxis() {\n    _classCallCheck(this, TimeAxis);\n\n    return _possibleConstructorReturn(this, (TimeAxis.__proto__ || Object.getPrototypeOf(TimeAxis)).apply(this, arguments));\n  }\n\n  _createClass(TimeAxis, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _props = this.props,\n          scale = _props.scale,\n          format = _props.format,\n          showGrid = _props.showGrid,\n          gridHeight = _props.gridHeight;\n      this.renderTimeAxis(scale, format, showGrid, gridHeight);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      var scale = nextProps.scale,\n          utc = nextProps.utc,\n          format = nextProps.format,\n          showGrid = nextProps.showGrid,\n          gridHeight = nextProps.gridHeight;\n\n      if (scaleAsString(this.props.scale) !== scaleAsString(scale) || this.props.utc !== utc || this.props.showGrid !== showGrid || this.props.gridHeight !== gridHeight) {\n        this.renderTimeAxis(scale, format, showGrid, gridHeight);\n      }\n    } // Force the component not to update because d3 will control the\n    // DOM from this point down.\n\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate() {\n      // eslint-disable-line\n      return false;\n    }\n  }, {\n    key: \"mergeStyles\",\n    value: function mergeStyles(style) {\n      return {\n        valueStyle: (0, _merge2.default)(true, defaultStyle.values, this.props.style.values ? this.props.style.values : {}),\n        tickStyle: (0, _merge2.default)(true, defaultStyle.ticks, this.props.style.ticks ? this.props.style.ticks : {})\n      };\n    }\n  }, {\n    key: \"renderTimeAxis\",\n    value: function renderTimeAxis(scale, format, showGrid, gridHeight) {\n      var axis = void 0;\n      var tickSize = showGrid ? -gridHeight : 10;\n      var utc = this.props.utc;\n      var tickCount = this.props.tickCount;\n      var style = this.mergeStyles(this.props.style);\n      var tickStyle = style.tickStyle,\n          valueStyle = style.valueStyle;\n\n      if (tickCount > 0) {\n        if (format === \"day\") {\n          axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcDay : _d3Time.timeDay, 1, tickCount]).tickFormat((0, _d3TimeFormat.timeFormat)(\"%d\")).tickSizeOuter(0);\n        } else if (format === \"month\") {\n          axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcMonth : _d3Time.timeMonth, 1, tickCount]).tickFormat((0, _d3TimeFormat.timeFormat)(\"%B\")).tickSizeOuter(0);\n        } else if (format === \"year\") {\n          axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcYear : _d3Time.timeYear, 1, tickCount]).tickFormat((0, _d3TimeFormat.timeFormat)(\"%Y\")).tickSizeOuter(0);\n        } else if (format === \"relative\") {\n          axis = (0, _d3Axis.axisBottom)(scale).ticks(tickCount).tickFormat(function (d) {\n            return _moment2.default.duration(+d).format();\n          }).tickSizeOuter(0);\n        } else if (_underscore2.default.isString(format)) {\n          axis = (0, _d3Axis.axisBottom)(scale).ticks(tickCount).tickFormat((0, _d3TimeFormat.timeFormat)(format)).tickSizeOuter(0);\n        } else if (_underscore2.default.isFunction(format)) {\n          axis = (0, _d3Axis.axisBottom)(scale).ticks(tickCount).tickFormat(format).tickSizeOuter(0);\n        } else {\n          axis = (0, _d3Axis.axisBottom)(scale).ticks(tickCount).tickSize(0);\n        }\n      } else {\n        if (format === \"day\") {\n          axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcDay : _d3Time.timeDay, 1]).tickFormat((0, _d3TimeFormat.timeFormat)(\"%d\")).tickSizeOuter(0);\n        } else if (format === \"month\") {\n          axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcMonth : _d3Time.timeMonth, 1]).tickFormat((0, _d3TimeFormat.timeFormat)(\"%B\")).tickSizeOuter(0);\n        } else if (format === \"year\") {\n          axis = (0, _d3Axis.axisBottom)(scale).tickArguments([utc ? _d3Time.utcYear : _d3Time.timeYear, 1]).tickFormat((0, _d3TimeFormat.timeFormat)(\"%Y\")).tickSizeOuter(0);\n        } else if (format === \"relative\") {\n          axis = (0, _d3Axis.axisBottom)(scale).tickFormat(function (d) {\n            return _moment2.default.duration(+d).format();\n          }).tickSizeOuter(0);\n        } else if (_underscore2.default.isString(format)) {\n          axis = (0, _d3Axis.axisBottom)(scale).tickFormat((0, _d3TimeFormat.timeFormat)(format)).tickSizeOuter(0);\n        } else if (_underscore2.default.isFunction(format)) {\n          axis = (0, _d3Axis.axisBottom)(scale).tickFormat(format).tickSizeOuter(0);\n        } else {\n          axis = (0, _d3Axis.axisBottom)(scale).tickSize(0);\n        }\n      } // Remove the old axis from under this DOM node\n\n\n      (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).selectAll(\"*\").remove(); // eslint-disable-line\n      //\n      // Draw the new axis\n      //\n\n      (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)) // eslint-disable-line\n      .append(\"g\").attr(\"class\", \"x axis\").style(\"stroke\", \"none\").styles(valueStyle).call(axis.tickSize(tickSize));\n\n      if (this.props.angled) {\n        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)) // eslint-disable-line\n        .select(\"g\").selectAll(\".tick\").select(\"text\").styles(valueStyle).style(\"text-anchor\", \"end\").attr(\"dx\", \"-1.2em\").attr(\"dy\", \"0em\").attr(\"transform\", function (d) {\n          return \"rotate(-65)\";\n        });\n      } else {\n        (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)) // eslint-disable-line\n        .select(\"g\").selectAll(\".tick\").select(\"text\").styles(valueStyle);\n      }\n\n      (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)) // eslint-disable-line\n      .select(\"g\").selectAll(\".tick\").select(\"line\").styles(tickStyle);\n      (0, _d3Selection.select)(_reactDom2.default.findDOMNode(this)).select(\"g\").select(\"path\").remove();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react2.default.createElement(\"g\", null);\n    }\n  }]);\n\n  return TimeAxis;\n}(_react2.default.Component);\n\nexports.default = TimeAxis;\nTimeAxis.defaultProps = {\n  showGrid: false,\n  style: defaultStyle,\n  angled: false\n};\nTimeAxis.propTypes = {\n  scale: _propTypes2.default.func.isRequired,\n  showGrid: _propTypes2.default.bool,\n  angled: _propTypes2.default.bool,\n  gridHeight: _propTypes2.default.number,\n  format: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.func]),\n  utc: _propTypes2.default.bool,\n  style: _propTypes2.default.shape({\n    label: _propTypes2.default.object,\n    // eslint-disable-line\n    values: _propTypes2.default.object,\n    // eslint-disable-line\n    axis: _propTypes2.default.object // eslint-disable-line\n\n  }),\n  tickCount: _propTypes2.default.number\n};","map":null,"metadata":{},"sourceType":"script"}