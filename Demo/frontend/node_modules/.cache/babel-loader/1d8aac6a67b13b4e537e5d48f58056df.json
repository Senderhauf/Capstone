{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _keys = require(\"babel-runtime/core-js/object/keys\");\n\nvar _keys2 = _interopRequireDefault(_keys);\n\nvar _getPrototypeOf = require(\"babel-runtime/core-js/object/get-prototype-of\");\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require(\"babel-runtime/helpers/possibleConstructorReturn\");\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _get2 = require(\"babel-runtime/helpers/get\");\n\nvar _get3 = _interopRequireDefault(_get2);\n\nvar _inherits2 = require(\"babel-runtime/helpers/inherits\");\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _underscore = require(\"underscore\");\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _processor = require(\"./processor\");\n\nvar _processor2 = _interopRequireDefault(_processor);\n\nvar _collector = require(\"../collector\");\n\nvar _collector2 = _interopRequireDefault(_collector);\n\nvar _indexedevent = require(\"../indexedevent\");\n\nvar _indexedevent2 = _interopRequireDefault(_indexedevent);\n\nvar _timerangeevent = require(\"../timerangeevent\");\n\nvar _timerangeevent2 = _interopRequireDefault(_timerangeevent);\n\nvar _pipeline = require(\"../pipeline\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * An Aggregator takes incoming events and adds them to a Collector\n * with given windowing and grouping parameters. As each Collection is\n * emitted from the Collector it is aggregated into a new event\n * and emitted from this Processor.\n */\n\n/**\n *  Copyright (c) 2016-2017, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nvar Aggregator = function (_Processor) {\n  (0, _inherits3.default)(Aggregator, _Processor);\n\n  function Aggregator(arg1, options) {\n    (0, _classCallCheck3.default)(this, Aggregator);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Aggregator.__proto__ || (0, _getPrototypeOf2.default)(Aggregator)).call(this, arg1, options));\n\n    if (arg1 instanceof Aggregator) {\n      var other = arg1;\n      _this._fields = other._fields;\n      _this._windowType = other._windowType;\n      _this._windowDuration = other._windowDuration;\n      _this._groupBy = other._groupBy;\n      _this._emitOn = other._emitOn;\n    } else if ((0, _pipeline.isPipeline)(arg1)) {\n      var pipeline = arg1;\n      _this._windowType = pipeline.getWindowType();\n      _this._windowDuration = pipeline.getWindowDuration();\n      _this._groupBy = pipeline.getGroupBy();\n      _this._emitOn = pipeline.getEmitOn();\n\n      if (!_underscore2.default.has(options, \"fields\")) {\n        throw new Error(\"Aggregator: constructor needs an aggregator field mapping\");\n      } // Check each of the aggregator -> field mappings\n\n\n      _underscore2.default.forEach(options.fields, function (operator, field) {\n        // Field should either be an array or a string\n        if (!_underscore2.default.isString(field) && !_underscore2.default.isArray(field)) {\n          throw new Error(\"Aggregator: field of unknown type: \" + field);\n        }\n      });\n\n      if (pipeline.mode() === \"stream\") {\n        if (!pipeline.getWindowType() || !pipeline.getWindowDuration()) {\n          throw new Error(\"Unable to aggregate because no windowing strategy was specified in pipeline\");\n        }\n      }\n\n      _this._fields = options.fields;\n    } else {\n      throw new Error(\"Unknown arg to Filter constructor\", arg1);\n    }\n\n    _this._collector = new _collector2.default({\n      windowType: _this._windowType,\n      windowDuration: _this._windowDuration,\n      groupBy: _this._groupBy,\n      emitOn: _this._emitOn\n    }, function (collection, windowKey, groupByKey) {\n      return _this.handleTrigger(collection, windowKey, groupByKey);\n    });\n    return _this;\n  }\n\n  (0, _createClass3.default)(Aggregator, [{\n    key: \"clone\",\n    value: function clone() {\n      return new Aggregator(this);\n    }\n  }, {\n    key: \"handleTrigger\",\n    value: function handleTrigger(collection, windowKey) {\n      var d = {};\n\n      _underscore2.default.each(this._fields, function (f, fieldName) {\n        var keys = (0, _keys2.default)(f);\n\n        if (keys.length !== 1) {\n          throw new Error(\"Fields should contain exactly one field\", f);\n        }\n\n        var field = keys[0];\n        var operator = f[field];\n        d[fieldName] = collection.aggregate(operator, field);\n      });\n\n      var event = void 0;\n\n      if (windowKey === \"global\") {\n        event = new _timerangeevent2.default(collection.range(), d);\n      } else {\n        //TODO: Specify UTC (or local) pipeline\n        var utc = this._windowType === \"fixed\";\n        event = new _indexedevent2.default(windowKey, d, utc);\n      }\n\n      this.emit(event);\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      this._collector.flushCollections();\n\n      (0, _get3.default)(Aggregator.prototype.__proto__ || (0, _getPrototypeOf2.default)(Aggregator.prototype), \"flush\", this).call(this);\n    }\n  }, {\n    key: \"addEvent\",\n    value: function addEvent(event) {\n      if (this.hasObservers()) {\n        this._collector.addEvent(event);\n      }\n    }\n  }]);\n  return Aggregator;\n}(_processor2.default);\n\nexports.default = Aggregator;","map":null,"metadata":{},"sourceType":"script"}