{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n *  Copyright (c) 2015-present, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/**\n *\n * The `<Charts>` element is a grouping for charts within a row.\n * It takes no props. Each chart within the group will be overlaid\n * on top of each other.\n *\n * Here is an example of two line charts within a `<Charts>` group:\n *\n * ```xml\n * <ChartContainer timeRange={audSeries.timerange()}>\n *     <ChartRow height=\"200\">\n *         <YAxis/>\n *         <Charts>\n *             <LineChart axis=\"aud\" series={audSeries} style={audStyle}/>\n *             <LineChart axis=\"euro\" series={euroSeries} style={euroStyle}/>\n *         </Charts>\n *         <YAxis/>\n *     </ChartRow>\n * </ChartContainer>\n * ```\n *\n * ## Making your own chart\n *\n * Anything within this grouping is considered a chart, meaning it will have\n * certain props injected into it. As a result you can easily implement your own chart\n * by simply expecting to have these props available and rendering as such.\n *\n * For your own chart, the render() method should return a SVG group `<g>` at the\n * top level, and then your chart rendering within that.\n *\n * In addition to any props you add to your chart, the following props are passed into\n * each chart automatically:\n *\n * #### timeScale\n *\n * A d3 scale for the time axis which you can use to transform your data in the x direction\n *\n * #### yScale\n *\n * A d3 scale for the y-axis which you can use to transform your data in the y direction\n *\n * #### width\n *\n * A the width your chart will render into\n */\n\n\nvar Charts = function (_React$Component) {\n  _inherits(Charts, _React$Component);\n\n  function Charts() {\n    _classCallCheck(this, Charts);\n\n    return _possibleConstructorReturn(this, (Charts.__proto__ || Object.getPrototypeOf(Charts)).apply(this, arguments));\n  }\n\n  _createClass(Charts, [{\n    key: \"render\",\n    value: function render() {\n      return this.constructor.name + \" elements are for configuration only\\nand should not be rendered\";\n    }\n  }]);\n\n  return Charts;\n}(_react2.default.Component);\n\nexports.default = Charts;","map":null,"metadata":{},"sourceType":"script"}