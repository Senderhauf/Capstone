{"ast":null,"code":"import _classCallCheck from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/DAG.js\";\nimport React, { Component } from \"react\";\nimport { Graph } from 'react-d3-graph';\n\nvar DAG =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DAG, _Component);\n\n  function DAG(props) {\n    var _this;\n\n    _classCallCheck(this, DAG);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DAG).call(this, props));\n\n    _this.onClickGraph = function () {\n      window.alert(\"Clicked the graph background\");\n    };\n\n    _this.onClickNode = function (nodeId) {\n      if (nodeId === \"AOT 1: \".concat(this.props.aot1)) {\n        this.killAot1();\n      } else if (nodeId === \"AOT 2: \".concat(this.props.aot2)) {\n        this.killAot2();\n      }\n    };\n\n    _this.onRightClickNode = function (event, nodeId) {\n      window.alert(\"Right clicked node \".concat(nodeId));\n    };\n\n    _this.onMouseOverNode = function (nodeId) {\n      window.alert(\"Mouse over node \".concat(nodeId));\n    };\n\n    _this.onMouseOutNode = function (nodeId) {\n      window.alert(\"Mouse out node \".concat(nodeId));\n    };\n\n    _this.onClickLink = function (source, target) {\n      window.alert(\"Clicked link between \".concat(source, \" and \").concat(target));\n    };\n\n    _this.onRightClickLink = function (event, source, target) {\n      window.alert(\"Right clicked link between \".concat(source, \" and \").concat(target));\n    };\n\n    _this.onMouseOverLink = function (source, target) {\n      window.alert(\"Mouse over in link between \".concat(source, \" and \").concat(target));\n    };\n\n    _this.onMouseOutLink = function (source, target) {\n      window.alert(\"Mouse out link between \".concat(source, \" and \").concat(target));\n    };\n\n    _this._element = React.createRef();\n    _this.state = {\n      // noseAngle: this.props.noseAngle,\n      data: {\n        nodes: [{\n          id: \"AOT 1: \".concat(_this.props.aot1),\n          x: -100,\n          y: -30\n        }, {\n          id: \"AOT 2: \".concat(_this.props.aot2),\n          x: -100,\n          y: 60\n        }, {\n          id: \"DIFF\",\n          x: -30,\n          y: 20\n        }, {\n          id: \"PILOT\",\n          x: -20,\n          y: 80\n        }, {\n          id: \"NOSE ANGLE: \".concat(_this.props.noseAngle),\n          x: 40,\n          y: 20\n        }],\n        links: [] //[{ source: 'AOT 1', target: 'DIFF' }, { source: 'AOT 2', target: 'DIFF' }, { source: 'DIFF', target: `NOSE ANGLE: ${this.props.noseAngle}`}, {source: `PILOT ${this.props.noseAngle}`, target: `NOSE ANGLE: ${this.props.noseAngle}`}]\n\n      },\n      myConfig: {\n        nodeHighlightBehavior: true,\n        node: {\n          color: 'lightgreen',\n          size: 200,\n          highlightStrokeColor: 'blue'\n        },\n        link: {\n          highlightColor: 'lightblue'\n        },\n        directed: true,\n        staticGraph: true,\n        focusedNodeId: \"DIFF\",\n        height: 200,\n        width: 400,\n        maxZoom: 5\n      }\n    };\n    _this.killAot1 = _this.killAot1.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.killAot2 = _this.killAot2.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onClickNode = _this.onClickNode.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(DAG, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      //Object.keys(this._element.current).map(x => console.log(`_element.current[${x}] : ${this._element.current[x]}`))       \n      console.log(this._element.current.offsetWidth);\n    } // graph event callbacks\n\n  }, {\n    key: \"killAot1\",\n    value: function killAot1() {\n      this.props.socket.emit(\"kill_aot1\", {});\n      console.log(\"kill_aot1 event emitted \".concat(Date.now(), \" \"));\n    }\n  }, {\n    key: \"killAot2\",\n    value: function killAot2() {\n      this.props.socket.emit(\"kill_aot2\", {});\n      console.log(\"kill_aot2 event emitted \".concat(Date.now(), \" \"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.state.data = {\n        nodes: [\n        /*{id: 'DUMMY', x: 0, y: 0},*/\n        {\n          id: \"AOT 1: \".concat(this.props.aot1),\n          x: -100,\n          y: -30\n        }, {\n          id: \"AOT 2: \".concat(this.props.aot2),\n          x: -100,\n          y: 60\n        }, {\n          id: \"DIFF\",\n          x: -30,\n          y: 20\n        }, {\n          id: \"PILOT\",\n          x: -20,\n          y: 80\n        }, {\n          id: \"NOSE ANGLE: \".concat(this.props.noseAngle),\n          x: 40,\n          y: 20\n        }],\n        links: [],\n        //[{ source: 'AOT 1', target: 'DIFF' }, { source: 'AOT 2', target: 'DIFF' }, { source: 'DIFF', target: `NOSE ANGLE: ${this.props.noseAngle}`}, {source: `PILOT ${this.props.noseAngle}`, target: `NOSE ANGLE: ${this.props.noseAngle}`}]\n        focusedNodeId: \"DIFF\"\n      };\n      console.log('DAG STATE ON RERENDER: \\n'); // console.log(JSON.stringify(this.state.data, null, '\\t'))\n\n      return React.createElement(Graph, {\n        id: \"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        ,\n        data: this.state.data,\n        config: this.state.myConfig,\n        onClickNode: this.onClickNode,\n        onRightClickNode: this.onRightClickNode,\n        onClickGraph: this.onClickGraph,\n        onClickLink: this.onClickLink,\n        onRightClickLink: this.onRightClickLink,\n        ref: this._element //onMouseOverNode={this.onMouseOverNode}\n        //onMouseOutNode={this.onMouseOutNode}\n        //onMouseOverLink={this.onMouseOverLink}\n        //onMouseOutLink={this.onMouseOutLink}\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return DAG;\n}(Component);\n\nexport default DAG;","map":{"version":3,"sources":["/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/DAG.js"],"names":["React","Component","Graph","DAG","props","onClickGraph","window","alert","onClickNode","nodeId","aot1","killAot1","aot2","killAot2","onRightClickNode","event","onMouseOverNode","onMouseOutNode","onClickLink","source","target","onRightClickLink","onMouseOverLink","onMouseOutLink","_element","createRef","state","data","nodes","id","x","y","noseAngle","links","myConfig","nodeHighlightBehavior","node","color","size","highlightStrokeColor","link","highlightColor","directed","staticGraph","focusedNodeId","height","width","maxZoom","bind","console","log","current","offsetWidth","socket","emit","Date","now"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Graph } from 'react-d3-graph';\n\n\nclass DAG extends Component {\n    constructor(props) {\n        super(props)\n\n        this. _element = React.createRef()\n        this.state = {\n            // noseAngle: this.props.noseAngle,\n            data: {\n                nodes: [{ id: `AOT 1: ${this.props.aot1}`, x: -100, y: -30}, { id: `AOT 2: ${this.props.aot2}`, x: -100, y: 60 }, { id: `DIFF`, x: -30, y: 20 }, { id: `PILOT`, x: -20, y: 80 }, { id: `NOSE ANGLE: ${this.props.noseAngle}`, x: 40, y: 20}],\n                links: [] //[{ source: 'AOT 1', target: 'DIFF' }, { source: 'AOT 2', target: 'DIFF' }, { source: 'DIFF', target: `NOSE ANGLE: ${this.props.noseAngle}`}, {source: `PILOT ${this.props.noseAngle}`, target: `NOSE ANGLE: ${this.props.noseAngle}`}]\n            },\n            myConfig: {\n                nodeHighlightBehavior: true,\n                node: {\n                    color: 'lightgreen',\n                    size: 200,\n                    highlightStrokeColor: 'blue'\n                },\n                link: {\n                    highlightColor: 'lightblue'\n                }, \n                directed: true, \n                staticGraph: true, \n                focusedNodeId: `DIFF`, \n                height: 200, \n                width: 400, \n                maxZoom: 5\n\n            }\n        }\n\n        this.killAot1 = this.killAot1.bind(this)\n        this.killAot2 = this.killAot2.bind(this)\n        this.onClickNode = this.onClickNode.bind(this)\n \n    }\n    \n    componentDidUpdate() {\n        //Object.keys(this._element.current).map(x => console.log(`_element.current[${x}] : ${this._element.current[x]}`))       \n        console.log(this._element.current.offsetWidth)\n    }\n\n    // graph event callbacks\n    onClickGraph = function() {\n        window.alert(`Clicked the graph background`);\n    };\n    \n    onClickNode = function(nodeId) {\n        if (nodeId === `AOT 1: ${this.props.aot1}`) {\n            this.killAot1()\n        }\n        else if (nodeId === `AOT 2: ${this.props.aot2}`) {\n            this.killAot2()\n        }\n    };\n    \n    onRightClickNode = function(event, nodeId) {\n        window.alert(`Right clicked node ${nodeId}`);\n    };\n    \n    onMouseOverNode = function(nodeId) {\n        window.alert(`Mouse over node ${nodeId}`);\n    };\n    \n    onMouseOutNode = function(nodeId) {\n        window.alert(`Mouse out node ${nodeId}`);\n    };\n    \n    onClickLink = function(source, target) {\n        window.alert(`Clicked link between ${source} and ${target}`);\n    };\n    \n    onRightClickLink = function(event, source, target) {\n        window.alert(`Right clicked link between ${source} and ${target}`);\n    };\n    \n    onMouseOverLink = function(source, target) {\n        window.alert(`Mouse over in link between ${source} and ${target}`);\n    };\n    \n    onMouseOutLink = function(source, target) {\n        window.alert(`Mouse out link between ${source} and ${target}`);\n    };\n\n    killAot1() {\n        this.props.socket.emit(\"kill_aot1\", {})\n        console.log(`kill_aot1 event emitted ${Date.now()} `)\n    }\n\n    killAot2() {\n        this.props.socket.emit(\"kill_aot2\", {})\n        console.log(`kill_aot2 event emitted ${Date.now()} `)\n    }\n\n    render() {\n\n        this.state.data = {\n            nodes: [/*{id: 'DUMMY', x: 0, y: 0},*/ { id: `AOT 1: ${this.props.aot1}`, x: -100, y: -30}, { id: `AOT 2: ${this.props.aot2}`, x: -100, y: 60 }, { id: `DIFF`, x: -30, y: 20 }, { id: `PILOT`, x: -20, y: 80 }, { id: `NOSE ANGLE: ${this.props.noseAngle}`, x: 40, y: 20}],\n            links: [], //[{ source: 'AOT 1', target: 'DIFF' }, { source: 'AOT 2', target: 'DIFF' }, { source: 'DIFF', target: `NOSE ANGLE: ${this.props.noseAngle}`}, {source: `PILOT ${this.props.noseAngle}`, target: `NOSE ANGLE: ${this.props.noseAngle}`}]\n            focusedNodeId: `DIFF`\n        }\n        console.log('DAG STATE ON RERENDER: \\n')\n\n        // console.log(JSON.stringify(this.state.data, null, '\\t'))\n        return (\n            <Graph\n                id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n                data={this.state.data}\n                config={this.state.myConfig}\n                onClickNode={this.onClickNode}\n                onRightClickNode={this.onRightClickNode}\n                onClickGraph={this.onClickGraph}\n                onClickLink={this.onClickLink}\n                onRightClickLink={this.onRightClickLink}\n                ref={this._element}\n                //onMouseOverNode={this.onMouseOverNode}\n                //onMouseOutNode={this.onMouseOutNode}\n                //onMouseOverLink={this.onMouseOverLink}\n                //onMouseOutLink={this.onMouseOutLink}\n            />\n        )\n    }\n}\n\nexport default DAG"]},"metadata":{},"sourceType":"module"}