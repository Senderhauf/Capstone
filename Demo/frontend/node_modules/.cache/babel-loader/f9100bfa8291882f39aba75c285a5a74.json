{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _classCallCheck2 = require(\"babel-runtime/helpers/classCallCheck\");\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require(\"babel-runtime/helpers/createClass\");\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _underscore = require(\"underscore\");\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Base class for objects in the processing chain which\n * need other object to listen to them. It provides a basic\n * interface to define the relationships and to emit events\n * to the interested observers.\n */\n\n\nvar Observable = function () {\n  function Observable() {\n    (0, _classCallCheck3.default)(this, Observable);\n    this._id = _underscore2.default.uniqueId(\"id-\");\n    this._observers = [];\n  }\n\n  (0, _createClass3.default)(Observable, [{\n    key: \"emit\",\n    value: function emit(event) {\n      this._observers.forEach(function (observer) {\n        observer.addEvent(event);\n      });\n    }\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      this._observers.forEach(function (observer) {\n        observer.flush();\n      });\n    }\n  }, {\n    key: \"addObserver\",\n    value: function addObserver(observer) {\n      var shouldAdd = true;\n\n      this._observers.forEach(function (o) {\n        if (o === observer) {\n          shouldAdd = false;\n        }\n      });\n\n      if (shouldAdd) this._observers.push(observer);\n    }\n  }, {\n    key: \"hasObservers\",\n    value: function hasObservers() {\n      return this._observers.length > 0;\n    }\n  }]);\n  return Observable;\n}();\n/**\n *  Copyright (c) 2016, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n\nexports.default = Observable;","map":null,"metadata":{},"sourceType":"script"}