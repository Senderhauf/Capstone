{"ast":null,"code":"import _classCallCheck from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/Chart.js\";\n\n/**\n *  Copyright (c) 2016, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/* eslint max-len:0 */\nimport React from \"react/\"; // Pond\n\nimport { TimeSeries, TimeRangeEvent, TimeRange } from \"pondjs\"; // Imports from the charts library\n\nimport { ChartContainer, ChartRow, Charts, EventChart, Resizable } from \"react-timeseries-charts\"; //\n// Test data\n//\n\nvar outageEvents = [{\n  startTime: \"2015-03-08T09:00:00Z\",\n  endTime: \"2015-03-22T14:00:00Z\",\n  title: \"ANL Scheduled Maintenance\",\n  description: \"ANL will be switching border routers...\",\n  completed: true,\n  external_ticket: \"\",\n  esnet_ticket: \"ESNET-20150302-002\",\n  organization: \"ANL\",\n  type: \"Planned\"\n}, {\n  startTime: \"2015-04-01T03:30:00Z\",\n  endTime: \"2015-04-02T16:50:00Z\",\n  title: \"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\n  description: \"The listed circuit was unavailable due to bent pins.\",\n  completed: true,\n  external_ticket: \"3576:144\",\n  esnet_ticket: \"ESNET-20150421-013\",\n  organization: \"Internet2 / Level 3\",\n  type: \"Unplanned\"\n}, {\n  startTime: \"2015-04-22T03:30:00Z\",\n  endTime: \"2015-04-22T13:00:00Z\",\n  description: \"At 13:33 pacific circuit 06519 went down.\",\n  title: \"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\n  completed: true,\n  external_ticket: \"\",\n  esnet_ticket: \"ESNET-20150421-013\",\n  organization: \"Internet2 / Level 3\",\n  type: \"Unplanned\"\n}]; //\n// Turn data into TimeSeries\n//\n\nvar events = outageEvents.map(function (_ref) {\n  var startTime = _ref.startTime,\n      endTime = _ref.endTime,\n      data = _objectWithoutProperties(_ref, [\"startTime\", \"endTime\"]);\n\n  return new TimeRangeEvent(new TimeRange(new Date(startTime), new Date(endTime)), data);\n});\nvar series = new TimeSeries({\n  name: \"outages\",\n  events: events\n}); //\n// Render event chart\n//\n\nfunction outageEventStyleFunc(event, state) {\n  var color = event.get(\"type\") === \"Planned\" ? \"#998ec3\" : \"#f1a340\";\n\n  switch (state) {\n    case \"normal\":\n      return {\n        fill: color\n      };\n\n    case \"hover\":\n      return {\n        fill: color,\n        opacity: 0.4\n      };\n\n    case \"selected\":\n      return {\n        fill: color\n      };\n\n    default: //pass\n\n  }\n}\n\nvar Outages =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Outages, _React$Component);\n\n  function Outages() {\n    var _this;\n\n    _classCallCheck(this, Outages);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Outages).call(this));\n    _this.state = {\n      tracker: null,\n      timerange: series.timerange()\n    };\n    return _this;\n  }\n\n  _createClass(Outages, [{\n    key: \"handleTrackerChanged\",\n    value: function handleTrackerChanged(tracker) {\n      this.setState({\n        tracker: tracker\n      });\n    }\n  }, {\n    key: \"handleTimeRangeChange\",\n    value: function handleTimeRangeChange(timerange) {\n      this.setState({\n        timerange: timerange\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Resizable, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(ChartContainer, {\n        timeRange: this.state.timerange,\n        enablePanZoom: true,\n        onTimeRangeChanged: this.handleTimeRangeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(ChartRow, {\n        height: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Charts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(EventChart, {\n        series: series,\n        size: 45,\n        style: outageEventStyleFunc,\n        label: function label(e) {\n          return e.get(\"title\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }))), React.createElement(ChartRow, {\n        height: \"30\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Charts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(EventChart, {\n        series: series,\n        size: 45,\n        style: outageEventStyleFunc,\n        label: function label(e) {\n          return e.get(\"title\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }))))))));\n    }\n  }]);\n\n  return Outages;\n}(React.Component);\n\n; // Export example\n\nexport default Outages;","map":{"version":3,"sources":["/home/cinderhoff/Documents/School/Spring19/CS595_Capstone/Capstone/Demo/src/main/Chart.js"],"names":["React","TimeSeries","TimeRangeEvent","TimeRange","ChartContainer","ChartRow","Charts","EventChart","Resizable","outageEvents","startTime","endTime","title","description","completed","external_ticket","esnet_ticket","organization","type","events","map","data","Date","series","name","outageEventStyleFunc","event","state","color","get","fill","opacity","Outages","tracker","timerange","setState","handleTimeRangeChange","e","Component"],"mappings":"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","sourcesContent":["/**\n *  Copyright (c) 2016, The Regents of the University of California,\n *  through Lawrence Berkeley National Laboratory (subject to receipt\n *  of any required approvals from the U.S. Dept. of Energy).\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree.\n */\n\n/* eslint max-len:0 */\n\nimport React from \"react/\";\n\n// Pond\nimport { TimeSeries, TimeRangeEvent, TimeRange } from \"pondjs\";\n\n// Imports from the charts library\nimport {ChartContainer, ChartRow, Charts, EventChart, Resizable} from \"react-timeseries-charts\";\n\n\n//\n// Test data\n//\n\nconst outageEvents = [\n    {\n        startTime: \"2015-03-08T09:00:00Z\",\n        endTime: \"2015-03-22T14:00:00Z\",\n        title: \"ANL Scheduled Maintenance\",\n        description: \"ANL will be switching border routers...\",\n        completed: true,\n        external_ticket: \"\",\n        esnet_ticket: \"ESNET-20150302-002\",\n        organization: \"ANL\",\n        type: \"Planned\"\n    },\n    {\n        startTime: \"2015-04-01T03:30:00Z\",\n        endTime: \"2015-04-02T16:50:00Z\",\n        title: \"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\n        description: \"The listed circuit was unavailable due to bent pins.\",\n        completed: true,\n        external_ticket: \"3576:144\",\n        esnet_ticket: \"ESNET-20150421-013\",\n        organization: \"Internet2 / Level 3\",\n        type: \"Unplanned\"\n    },\n    {\n        startTime: \"2015-04-22T03:30:00Z\",\n        endTime: \"2015-04-22T13:00:00Z\",\n        description: \"At 13:33 pacific circuit 06519 went down.\",\n        title: \"STAR-CR5 < 100 ge 06519 > ANL  - Outage\",\n        completed: true,\n        external_ticket: \"\",\n        esnet_ticket: \"ESNET-20150421-013\",\n        organization: \"Internet2 / Level 3\",\n        type: \"Unplanned\"\n    }\n];\n\n//\n// Turn data into TimeSeries\n//\n\nconst events = outageEvents.map(\n    ({ startTime, endTime, ...data }) =>\n        new TimeRangeEvent(new TimeRange(new Date(startTime), new Date(endTime)), data)\n);\nconst series = new TimeSeries({ name: \"outages\", events });\n\n//\n// Render event chart\n//\n\nfunction outageEventStyleFunc(event, state) {\n    const color = event.get(\"type\") === \"Planned\" ? \"#998ec3\" : \"#f1a340\";\n    switch (state) {\n        case \"normal\":\n            return {\n                fill: color\n            };\n        case \"hover\":\n            return {\n                fill: color,\n                opacity: 0.4\n            };\n        case \"selected\":\n            return {\n                fill: color\n            };\n        default:\n        //pass\n    }\n}\n\nclass Outages extends React.Component {\n    constructor() {\n        super()\n        this.state =  {\n            tracker: null,\n            timerange: series.timerange()\n        };\n    }\n\n    handleTrackerChanged(tracker) {\n        this.setState({ tracker });\n    }\n\n    handleTimeRangeChange(timerange) {\n        this.setState({ timerange });\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <Resizable>\n                            <ChartContainer\n                                timeRange={this.state.timerange}\n                                enablePanZoom={true}\n                                onTimeRangeChanged={this.handleTimeRangeChange}\n                            >\n                                <ChartRow height=\"30\">\n                                    <Charts>\n                                        <EventChart\n                                            series={series}\n                                            size={45}\n                                            style={outageEventStyleFunc}\n                                            label={e => e.get(\"title\")}\n                                        />\n                                    </Charts>\n                                </ChartRow>\n                                <ChartRow height=\"30\">\n                                    <Charts>\n                                        <EventChart\n                                            series={series}\n                                            size={45}\n                                            style={outageEventStyleFunc}\n                                            label={e => e.get(\"title\")}\n                                        />\n                                    </Charts>\n                                </ChartRow>\n                            </ChartContainer>\n                        </Resizable>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\n// Export example\nexport default Outages;"]},"metadata":{},"sourceType":"module"}